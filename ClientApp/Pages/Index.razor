@page "/"

@inject IJSRuntime jSRuntime
@inject NavigationManager navigationManager
@inject ILocalStorageService localStorageService
@inject IHomepageService homepageService
@inject IInfoBlockService infoBlockService

@if (IsProcessing)
{
    <div style="position:fixed;top:50%;left:50%;margin-top:-50px;">
        <img src="images/ajax-loader.gif" />
    </div>
}
else
{
    @foreach (var item in InfoBlockDTOs)
    {
        <div class="card text-center mt-3">
            <div class="card-body">
                <p class="card-text">
                    @item.Data
                </p>
            </div>
        </div>
    }

    <EditForm Model="HomeModel" OnValidSubmit="SaveInitialData">

        <div class="row p-0 mx-0 mt-4">

            <div class="col-12 col-md-5  offset-md-1 pl-2  pr-2 pr-md-0">
                <div class="form-group">
                    <label>
                        Rental from
                    </label>
                    <InputDate min="@DateTime.Now.ToString("yyyy-MM-dd")" @bind-Value="HomeModel.StartDate" type="text" class="form-control" />
                </div>
            </div>

            <div class=" col-4 col-md-2">
                <div class="form-group">
                    <label class="text-warning">Nights</label>
                    <InputNumber @bind-Value="HomeModel.NumberOfNights" class="form-control"></InputNumber>
                </div>
            </div>

            <div class="col-4 col-md-2 p-0 pr-2">
                <div class="form-group">
                    <label>&nbsp;</label>
                    <input type="submit" value="Go" class="btn btn-success btn-block" />
                </div>
            </div>

        </div>
    </EditForm>

    <div class="mt-5">
        @foreach (var item in HomepageInfoDTOs)
        {
            <div class="card text-center mt-3 mb-2">
                <div class="card-img-top">
                    <div id="carouselExampleIndicators_@item.Id" class="carousel slide mb-4 m-md-3 m-0 pt-3 pt-md-0"
                         data-ride="carousel">

                        <ol class="carousel-indicators">
                            @{
                                int imageIndex = 0;
                                int innerImageIndex = 0;
                            }

                            @foreach (var img in item.Images)
                            {
                                if (imageIndex == 0)
                                {
                                    <li data-target="#carouselExampleIndicators_@item.Id"
                                        data-slide-to="@imageIndex" class="active"></li>
                                }
                                else
                                {
                                    <li data-target="#carouselExampleIndicators_@item.Id" data-slide-to="@imageIndex"></li>
                                }
                                imageIndex++;
                            }
                        </ol>

                        <div class="carousel-inner">
                            @foreach (var image in item.Images)
                            {
                                if (innerImageIndex == 0)
                                {
                                    <div class="carousel-item active">
                                        <img class="d-block w-100"
                                             src="@image.ImageUrl" alt="First slide">
                                    </div>
                                    <div class="carousel-caption d-none d-md-block">
                                        <h5>
                                            @item.Name
                                        </h5>
                                        <p>
                                            @((MarkupString)item.Info)
                                        </p>
                                    </div>
                                }
                                else
                                {
                                    <div class="carousel-item">
                                        <img class="d-block w-100"
                                             src="@image.ImageUrl" alt="First slide">
                                    </div>
                                }
                                innerImageIndex++;
                            }
                        </div>

                        <a class="carousel-control-prev" href="#carouselExampleIndicators_@item.Id" role="button" data-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="sr-only">Previous</span>
                        </a>

                        <a class="carousel-control-next" href="#carouselExampleIndicators_@item.Id" role="button" data-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="sr-only">Next</span>
                        </a>

                    </div>
                </div>

            </div>
        }
    </div>
}

@code{

    public HomeViewModel HomeModel { get; set; } = new HomeViewModel();

    public bool IsProcessing { get; set; } = false;
    public IEnumerable<HomepageInfoDTO> HomepageInfoDTOs { get; set; } = new List<HomepageInfoDTO>();
    public IEnumerable<InfoBlockDTO> InfoBlockDTOs { get; set; } = new List<InfoBlockDTO>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            IsProcessing = true;

            // Load homepage info from API.
            HomepageInfoDTOs = await homepageService.GetAllHomepageInfo();
            InfoBlockDTOs = await infoBlockService.GetAllBlocks();

            IsProcessing = false;
        }
        catch (Exception ex)
        {
            await jSRuntime.ToastrError(ex.Message);
        }
    }

    private async Task SaveInitialData()
    {
        try
        {
            HomeModel.EndDate = HomeModel.StartDate.AddDays(HomeModel.NumberOfNights);

            await localStorageService.SetItemAsync(StaticDetails.Local_InitialBooking, HomeModel); // Save data in browser local storage.

            navigationManager.NavigateTo("flats/all", true); // After redirect user to the Flats list page.
        }
        catch (Exception ex)
        {
            await jSRuntime.ToastrError(ex.Message);
        }
    }
}